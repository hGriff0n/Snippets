#!/bin/bash

# Setup constants for calling into ruby scripts
RUBY=/c/Ruby23-64/bin/ruby.exe
GitDIR=./.git/hooks

# Collect information about the commit context

# Collect data about the git files (what's being committed, etc.) into an array
mapfile -t staged < <(git diff --cached --name-only)                    # All staged files
mapfile -t tracked < <(git diff --name-only)                            # All tracked but unstaged files
mapfile -t untracked < <(git ls-files --other --exclude-standard)       # All untracked and unstaged files

# Search for information within the git message ($1 - file of commit message)



# Check the commit body for various "triggers" (ie. figure out what to do)



# Update the readme file for versioning (TODO: Add in triggers)
    # Update if "_readme.md" changes
    # Update if any source files change
    # Update if forced by commit message
RUBY $GitDIR/assemble_readme.rb
git add "README.md"

# Triggers (If any source files are changed, not including comments, not including testing framework)
#       What if the comments are documenting a change in interface
#   Major - Updated by hand (should be a big enough event that I remember)
#   Minor - [New] in commit header ???
#       Medium-Large numbers of changed lines
#       Performing a merge ???
#   Patch - [Fix] in commit header ???
#       Small numbers of changed lines

# I kinda want to force something within every commit (so I don't forget anything)


# $? - to get the return value of the last run command

exit 1